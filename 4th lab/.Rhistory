df.isna()
str(df)
View(diabetes)
df <- diabetes
diabetes <- read.csv("D:/Sem study materials/study materials 6th sem/Study materials by me/Statistical Learning Lab/3rd lab/diabetes.csv")
View(diabetes)
View(diabetes)
df <- diabetes
head(df)
str(df)
is.na(df)
value <- is.na(df)
value
is.na(df)<- value
value
sum(str(df))
sum(is.na(df))
str(df)
sum(is.na(df))
dim(df)
plot(df)
df_index = sample(nrow(df),615)
df_train = df[df_index,]
df_test = df[-df_index,]
library(ISLR)
library(ggplot2)
library(MASS)
attach(df)
lda_fit1 <- lda(Outcome ~ ., family = binomial , data = df_train)
summary(lda_fit1)
lda_fit1
lda_fit1
par(mar = c(1,1,1,1))
plot(lda_fit1)
df_test <- subset(df_test,select = -`Outcome`)
df_train = df[df_index,]
df_test = df[-df_index,]
pred <- predict(lda_fit1 , newdata = df_test )
pred.df <- data.frame(pred)
head(pred.df)
pred.df <- data.frame(pred)
head(pred.df)
table(Actual = df_test$Outcome,Predicted = pred.df$class)
plot(lda_fit1)
lda_values <- predict(lda_fit1)
library(ggplot2)
# Create a dataframe with predictions
lda_df <- data.frame(LD1 = lda_values$x[,1], Outcome = df_train$Outcome)
# Predict the LDA values
lda_values <- predict(lda_fit1)
lda_fit1 <- lda(Outcome ~ ., data = df_train)
lda_fit1
plot(lda_fit1)
plot(lda_fit1) + labs(title = "LDA Separation" , x = "Linear Discriminant (LD1)" , fill = "Outcome")
plot(lda_fit1 , xlab =  "Linear Discriminant (LD1)" , main = "LDA Separation" )
plot(lda_fit1 , xlab =  "Linear Discriminant (LD1)" , main = "LDA Separation" )
plot(lda_fit1 , xlab =  "Linear Discriminant (LD1)" , ylab = "Linear Discriminat 2 (LD2)" , main = "LDA Separation" )
plot(lda_fit1 , xlab =  "Linear Discriminant (LD1)" , ylab = "Linear Discriminat 2 (LD2)" , main = "LDA Separation" )
plot(lda_fit1)
